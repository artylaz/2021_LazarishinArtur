// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2021_LazarishinArtur.Web.Domain;

namespace _2021_LazarishinArtur.Web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211223061223_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("_2021_LazarishinArtur.Web.Domain.Entities.HeatLossCircleData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("ApertureRatio")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<double>("Diameter")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double>("RadiationHeatLoss")
                        .HasColumnType("REAL");

                    b.Property<double>("TempBake")
                        .HasColumnType("REAL");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<double>("WallThickness")
                        .HasColumnType("REAL");

                    b.Property<double>("WindowOpenTime")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HeatLossCircleDatas");
                });

            modelBuilder.Entity("_2021_LazarishinArtur.Web.Domain.Entities.HeatLossRectangleData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("ApertureRatio")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<double>("HeightWindow")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double>("RadiationHeatLoss")
                        .HasColumnType("REAL");

                    b.Property<double>("TempBake")
                        .HasColumnType("REAL");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<double>("WallThickness")
                        .HasColumnType("REAL");

                    b.Property<double>("WidthWindow")
                        .HasColumnType("REAL");

                    b.Property<double>("WindowOpenTime")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HeatLossRectangleDatas");
                });

            modelBuilder.Entity("_2021_LazarishinArtur.Web.Domain.Entities.HeatLossSquaredData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("ApertureRatio")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double>("RadiationHeatLoss")
                        .HasColumnType("REAL");

                    b.Property<double>("SideLength")
                        .HasColumnType("REAL");

                    b.Property<double>("TempBake")
                        .HasColumnType("REAL");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<double>("WallThickness")
                        .HasColumnType("REAL");

                    b.Property<double>("WindowOpenTime")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HeatLossSquaredDatas");
                });

            modelBuilder.Entity("_2021_LazarishinArtur.Web.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "user"
                        });
                });

            modelBuilder.Entity("_2021_LazarishinArtur.Web.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@mail.ru",
                            Name = "admin",
                            Password = "admin",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("_2021_LazarishinArtur.Web.Domain.Entities.HeatLossCircleData", b =>
                {
                    b.HasOne("_2021_LazarishinArtur.Web.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("_2021_LazarishinArtur.Web.Domain.Entities.HeatLossRectangleData", b =>
                {
                    b.HasOne("_2021_LazarishinArtur.Web.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("_2021_LazarishinArtur.Web.Domain.Entities.HeatLossSquaredData", b =>
                {
                    b.HasOne("_2021_LazarishinArtur.Web.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("_2021_LazarishinArtur.Web.Domain.Entities.User", b =>
                {
                    b.HasOne("_2021_LazarishinArtur.Web.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
